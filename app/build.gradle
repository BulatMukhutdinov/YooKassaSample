plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id "com.google.protobuf" version "0.8.12"
    id 'com.google.devtools.ksp'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlinVersion"
}

def composeVersion = '1.1.1'
def protocVersion = '3.19.4'

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0.0"

        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            lintOptions {
                abortOnError false
            }

            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
        }

        debug {
            applicationIdSuffix ".debug"

            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
        useIR = true
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion composeVersion
        kotlinCompilerVersion kotlinVersion
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/kotlin']
        }
    }

    packagingOptions {
        exclude "DebugProbesKt.bin"
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    implementation 'com.github.bulatmukhutdinov:utils:1.9.2'

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'com.google.android.material:material:1.6.0-alpha03'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2"

    implementation 'androidx.activity:activity-compose:1.5.0-alpha03'
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0"
    implementation "androidx.paging:paging-compose:1.0.0-alpha14"

    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling:$composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$composeVersion"
    implementation "androidx.compose.runtime:runtime:$composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-compose:2.5.0-alpha03"

    implementation 'androidx.preference:preference-ktx:1.2.0'

    def accompanistVersion = '0.15.0'
    implementation "com.google.accompanist:accompanist-insets:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-coil:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-pager:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanistVersion"

    def roomVersion = '2.4.2'
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-paging:$roomVersion"
    ksp "androidx.room:room-compiler:$roomVersion"

    implementation "io.insert-koin:koin-android:3.1.2"

    implementation(platform("com.google.firebase:firebase-bom:28.0.1"))
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics"
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-messaging-directboot'

    implementation "com.android.billingclient:billing-ktx:4.1.0"

    implementation 'com.google.android.gms:play-services-auth:20.1.0'

    def retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    implementation "androidx.datastore:datastore:1.0.0"
    implementation "com.google.protobuf:protobuf-javalite:$protocVersion"
    implementation 'androidx.exifinterface:exifinterface:1.3.3'

    implementation 'ru.tinkoff.decoro:decoro:1.5.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'ru.yoomoney.sdk.kassa.payments:yookassa-android-sdk:6.5.0'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protocVersion:osx-x86_64"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
